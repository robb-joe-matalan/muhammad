# farewell-pipeline.yml
# A special pipeline that runs once in a lifetime 😢

trigger:
  - leaving/muhammad-new-adventure
  - emotions/trying-not-to-cry

pr: none  # No pull requests can stop this journey

name: 'Farewell-Muhammad-$(Date:yyyyMMdd)$(Rev:.r)'

pool:
  name: 'Heartstrings-Pool'
  vmImage: 'emotions-latest'

variables:
  - group: 'Team-Memories'
  - name: departingHero
    value: 'Muhammad'
  - name: yearsOfAwesomeness
    value: '3'
  - name: coffeeConsumed
    value: '2048L'
  - name: teamsMeetings
    value: '47,982'
  - name: kubernetesPodsDeleted
    value: '∞'
  - name: willBeMissedLevel
    value: 'CRITICAL_MAXIMUM'

stages:
  - stage: Remembering
    displayName: '📸 Collecting Memories'
    jobs:
      - job: GatheringTheBestMoments
        displayName: 'Compiling Muhammad\'s Greatest Hits'
        steps:
          - task: PowerShell@2
            displayName: '🏆 Load Legendary Achievements'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]Loading Muhammad's Epic Moments..."
                Write-Host "✅ That time he just deployed QA and PROD like it was nothing."
                Write-Host "✅ The legendary 'It's always DNS' diagnosis accuracy: 97%"
                Write-Host "✅ Kubernetes clusters tamed: 12"
                Write-Host "✅ Yaml indentation errors survived: 1,337"
                Write-Host "✅ Times said 'Have you tried turning it off and on?': 256"

          - task: Bash@3
            displayName: '☕ Calculate Coffee Metrics'
            inputs:
              targetType: 'inline'
              script: |
                echo "##[warning]Coffee consumption has reached legendary status!"
                echo "Total coffee consumed: $COFFEECONSUMED"
                echo "Average per deployment: 4 cups"
                echo "Coffee-to-code ratio: OPTIMAL"

  - stage: TeamMessages
    displayName: '💌 Farewell Messages'
    dependsOn: Remembering
    jobs:
      - job: HeartfeltGoodbyes
        displayName: 'Deploying Feelings to Production'
        steps:
          - task: PowerShell@2
            displayName: '👨‍💼 Message from Martin'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Martin (Chief Chaos Coordinator)"
                Write-Host "Muhammad, you've been the Kubernetes to my Docker,"
                Write-Host "the CI to my CD, the merge to my conflict."
                Write-Host "Now go forth and orchestrate greatness!"
                Write-Host "P.S. - I'm keeping your coffee mug as a memorial"

          - task: PowerShell@2
            displayName: '👩‍💻 Message from Tahmid'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Tahmid (Pipeline Whisperer)"
                Write-Host "Remember when we spent 6 hours debugging"
                Write-Host "only to find it was a missing semicolon?"
                Write-Host "Those are the moments I'll miss most."
                Write-Host "May your new pipelines always be green! 💚"

          - task: PowerShell@2
            displayName: '🤖 Message from the CI/CD Bots'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Your Faithful Automation Friends"
                Write-Host "BEEP BOOP: SENTIMENT_MODULE.EXE ACTIVATED"
                Write-Host "We will miss breaking your builds at 4:59 PM"
                Write-Host "Error: Cannot find replacement for 'Muhammad'"
                Write-Host "Warning: Emotional buffer overflow detected"

          - task: PowerShell@2
            displayName: '👨‍💻 Message from Andy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Andy (The Code Whisperer)"
                Write-Host "Muhammad, working with you has been like having"
                Write-Host "a personal Stack Overflow - always had the answers!"
                Write-Host "Thanks for all the pair programming sessions"
                Write-Host "and for never judging my commit messages 😅"

          - task: PowerShell@2
            displayName: '🛠️ Message from Joe'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Joe (Average developer!)"
                Write-Host "All the best Muhammed, it's been a pleasure to work with you"
                Write-Host "I'll miss our Friday morning scrambles to get screens ready for demo!"
                Write-Host "Take care bro"

          - task: PowerShell@2
            displayName: '👩‍🔬 Message from Yasemin'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Yasemin (Quality Guardian)"
                Write-Host "Muhammad, you taught me that 'works on my machine'"
                Write-Host "is not acceptable test coverage! 😄"
                Write-Host "Your attention to detail made us all better"
                Write-Host "May your new tests always pass on the first run!"

          - task: PowerShell@2
            displayName: '👑 Message from Duncan'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Duncan (The Big Boss)"
                Write-Host "Muhammad, as your manager, I can officially say:"
                Write-Host "You've been the most reliable deployment I've ever seen"
                Write-Host "No rollbacks required, 100% uptime character"
                Write-Host "Your new company is getting a premium package! 🎯"

          - task: PowerShell@2
            displayName: '📊 Message from Dane'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Dane (Metrics Master)"
                Write-Host "The dashboard will never look the same without you"
                Write-Host "Who else will help me understand why our graphs"
                Write-Host "look like abstract art? 📈📉"
                Write-Host "Keep those SLOs green wherever you go!"

          - task: PowerShell@2
            displayName: '🎨 Message from Priyanka'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Priyanka (Frontend Wizard)"
                Write-Host "Muhammad, thanks for making the backend"
                Write-Host "so reliable that my frontend actually worked!"
                Write-Host "No more 'it's a backend issue' excuses 😉"
                Write-Host "Your APIs were poetry in motion!"

          - task: PowerShell@2
            displayName: '🔧 Message from Krishnan'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Krishnan (System Architect)"
                Write-Host "Your microservices were so well designed,"
                Write-Host "they could be featured in architecture magazines!"
                Write-Host "Thanks for all the late-night incident calls"
                Write-Host "and for actually knowing what 'eventual consistency' means"

          - task: PowerShell@2
            displayName: '🚀 Message from Elamin'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Elamin (Cloud Navigator)"
                Write-Host "Muhammad, you turned our AWS bills from"
                Write-Host "'heart attack inducing' to 'pleasantly optimized'"
                Write-Host "Your cost optimization skills are legendary"
                Write-Host "May your new cloud journey be ever-scalable! ☁️"

          - task: PowerShell@2
            displayName: '🔐 Message from Afshin'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]From: Afshin (Security Sentinel)"
                Write-Host "Finally, someone who doesn't think 'password123'"
                Write-Host "is adequate security! 🔒"
                Write-Host "Your security-first mindset kept us safe"
                Write-Host "Go forth and encrypt all the things!"

  - stage: KnowledgeTransfer
    displayName: '📚 Wisdom Archive'
    dependsOn: TeamMessages
    jobs:
      - job: SaveTheSacredKnowledge
        displayName: 'Backing Up Muhammad\'s Brain'
        steps:
          - task: PowerShell@2
            displayName: '🧙‍♂️ Extract Wizardry'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[command]npm install muhammad-legacy-knowledge"
                Write-Host ""
                Write-Host "npm WARN deprecated coffee-script@0.0.1: CoffeeScript on life support"
                Write-Host "npm WARN deprecated knowledge@99.99.99: Too powerful for mortal devs"
                Write-Host "npm ERR! peer dep missing: tissues@^2.0.0, required by farewell-handler@1.0.0"
                Write-Host "npm WARN optional SKIPPING OPTIONAL DEPENDENCY: emotions@^7.3.1 (node_modules/feelings):"
                Write-Host "npm WARN 404 SKIPPING OPTIONAL DEPENDENCY: 404 Not Found: sanity@latest"
                Write-Host ""
                Write-Host "> muhammad-wisdom@1.33.7 postinstall /home/team/node_modules/memories"
                Write-Host "> echo 'Installing 47GB of memories...' && sleep 999"
                Write-Host ""
                Write-Host "npm WARN lifecycle muhammad-wisdom@1.33.7~postinstall: cannot run in wd %s %s"
                Write-Host "npm ERR! 174 vulnerabilities (2 low, 4 moderate, 167 high, 1 apocalyptic)"
                Write-Host "npm ERR! Some issues need review, and may require choosing a different dependency"
                Write-Host "npm ERR! Or just YOLO it to production like Muhammad would"
                Write-Host ""
                Write-Host "added 9999 packages from 1337 contributors and audited 404042 packages in 127.583s"
                Write-Host "found 0 replacements for Muhammad"

  - stage: FinalDeployment
    displayName: '🚀 Deploying Muhammad to New Adventure'
    dependsOn: KnowledgeTransfer
    condition: succeeded()
    jobs:
      - deployment: NewBeginnings
        displayName: 'Launching Career v2.0'
        environment: 'UnicornStartup-Production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: '🎯 Initialize New Journey'
                  inputs:
                    targetType: 'inline'
                    script: |
                      Write-Host "##[section]Deploying Muhammad to UnicornStartup.io..."
                      Write-Host "##vso[task.setprogress value=25]Packing legendary bash scripts..."
                      Start-Sleep -Seconds 1
                      Write-Host "##vso[task.setprogress value=50]Transferring Kubernetes wisdom..."
                      Start-Sleep -Seconds 1
                      Write-Host "##vso[task.setprogress value=75]Copying coffee preferences..."
                      Start-Sleep -Seconds 1
                      Write-Host "##vso[task.setprogress value=100]Deployment complete!"
                      Write-Host ""
                      Write-Host "##[successbanner]Muhammad successfully deployed to new adventure! 🎉"

                - task: PowerShell@2
                  displayName: '💔 Handle Team Emotions'
                  inputs:
                    targetType: 'inline'
                    script: |
                      Write-Host "##[warning]Warning: High levels of sentiment detected"
                      Write-Host "Attempting to patch emotional vulnerabilities..."
                      Write-Host ""
                      Write-Host "Patch notes:"
                      Write-Host "- Added extra coffee machines to compensate"
                      Write-Host "- Increased hug timeout from 3 to 10 seconds"
                      Write-Host "- Deployed emergency chocolate to all workstations"

  - stage: PostDeployment
    displayName: '🎊 After Party Pipeline'
    dependsOn: FinalDeployment
    condition: always()  # Party happens no matter what!
    jobs:
      - job: CelebrationProtocol
        displayName: 'Execute Farewell Protocols'
        steps:
          - task: PowerShell@2
            displayName: '� Deploy Celebration Treats'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[command]apt-get install celebration-tools"
                Write-Host "Setting up farewell party environment..."
                Write-Host "✅ Cake: Deployed to all team members"
                Write-Host "✅ Pizza: Scaled to 5 replicas"
                Write-Host "✅ Emotions: Running in high availability mode"
                Write-Host "✅ Good wishes: Load balanced across the team"

          - task: PowerShell@2
            displayName: '📊 Final Statistics'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##[section]Muhammad's Final Stats:"
                Write-Host "╔══════════════════════════════════════╗"
                Write-Host "║  DEVOPS ENGINEER SCORECARD           ║"
                Write-Host "╠══════════════════════════════════════╣"
                Write-Host "║  Uptime as awesome colleague: 99.99% ║"
                Write-Host "║  Bugs squashed: 1,024                ║"
                Write-Host "║  Pipelines that actually work: 73    ║"
                Write-Host "║  'It works on my machine': 512       ║"
                Write-Host "║  Team morale boost: +1000%           ║"
                Write-Host "║  Will be missed rating: ★★★★★        ║"
                Write-Host "╚══════════════════════════════════════╝"

          - task: PowerShell@2
            displayName: '👋 Final Message'
            continueOnError: true  # Because emotions might cause errors
            inputs:
              targetType: 'inline'
              script: |
                Write-Host ""
                Write-Host "##[section]===========================================" 
                Write-Host "##[successbanner]FAREWELL MUHAMMAD - MAY YOUR BUILDS ALWAYS PASS!"
                Write-Host "##[section]==========================================="
                Write-Host ""
                Write-Host "From all of us at Ignite:"
                Write-Host "Thank you for the memories, the mentorship,"
                Write-Host "and for never using 'force push' on main."
                Write-Host ""
                Write-Host "Remember: We're just a kubectl exec away! 🚀"
                Write-Host ""
                Write-Host "##[warning]Pipeline complete. Tissue buffer overflow detected."
                
# Post-deployment notes:
# - This pipeline will remain in our repository forever
# - Re-run whenever we miss Muhammad
# - Do NOT modify - this is a historical artifact
# - If pipeline fails, it's probably DNS
